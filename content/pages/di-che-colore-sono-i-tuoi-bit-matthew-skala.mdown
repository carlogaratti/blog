# Di che colore sono i tuoi bit? #

_Questo post è una traduzione di ["What Colour are your bits?"][] di Matthew Skala._

[Paranoia][] è un classico gioco d'avventura che ha luogo in un mondo futuro
estremamente <s>repressivo</s> Utopistico amministrato dal Computer, il quale
è Tuo Amico. Leggendo un recente [articolo di LawMeme][] e la discussione a esso
collegata ho capito che i livelli di sicurezza codificati dai colori di Paranoia
sono una buona metafora per spiegare molti dei problemi di copyright e libertà
intellettuale, e possono aiutare a capire perché talvolta abbiamo problemi a
capire e far capire le correnti di pensiero in questi campi.

[...]

Nel mondo di Paranoia tutto ha un livello di sicurezza codificato da un colore
(da infrarosso fino a ultravioletto) e tutti hanno un livello di autorizzazione
codificato allo stesso modo. Non è permesso toccare o avere qualsivoglia
rapporto con qualcosa di livello superiore al proprio. Un Troubleshooter di
livello Rosso non può attraversare una porta di livello Arancione. Formalmente,
non gli è neanche permesso di essere a conoscenza di cose di livello superiore
al proprio. Chiunque violi questa regola è un Mutante Traditore Comunista,
passibile di pena di morte.

Gran parte del gioco ruota intorno alle conseguenze di questi livelli di
sicurezza. Ad esempio, l'Amico Computer potrebbe chiedere a un gruppo di
Troubleshooter di livello Rosso di ridipingere un corridoio che avrebbe dovuto
essere Arancione ma è stato dipinto di Giallo <s>per errore</s> dai Mutanti
Traditori Comunisti. È assai probabile che in tale caso i Troubleshooter
finiscano per spararsi a vicenda per aver tradito l'Amico Computer, dato che
nessuno di essi può toccare la vernice, avvicinarsi al corridoio, parlare del
proprio compito e a tutti è richiesto di far rispettare tali regole. 

Nella proprietà intellettuale e in altri campi siamo molto interessati a
informazioni, dati, opere d'arte e un sacco di altre cose che riassumerò con il
termine "bit". I bit sono tutte quelle cose che (in linea di principio) possono
essere rappresentate da zeri e uni. Gran parte della proprietà intellettuale
consiste in regole su proprietà intangibili dei bit — Chi ha creato i bit? Da
dove vengono? Dove stanno andando? Sono copie di altri bit? A queste domande si
può dare risposta con dei "metadati", ma a mio parere i metadati sono altri bit
aggiunti ai bit in questione, e io vorrei sottolineare che quello di cui parlo
qui è qualcosa che non è ben descritto da bit e non lo potrà mai essere.
Chiamiamolo "Colore", perché risulta funzionare in modo simile ai livelli di
sicurezza del mondo di Paranoia.

I bit, per loro natura, non hanno Colore. Il Colore, in questo senso, non fa
parte dell'universo. Cosa più importante, non puoi guardare direttamente i bit
e osservare di che Colore sono. Recentemente mi sono imbattuto in un esempio
divertente di Colore dei bit: un mio amico stava parlando di come avesse
eseguito 4'33", il famoso brano muto di John Cage, per MP3. Ok, abbiamo detto,
(sto parafrasando la conversazione), insomma hai preso un file di zeri della
dimensione giusta da `/dev/zero` e lo hai compresso con un compressore MP3? No,
no, ha detto. Se lo avessi avessi fatto, non sarebbe davvero 4'33", perché per
eseguire quel brano devi creare il silenzio in un particolare modo, secondo le
regole redatte dal compositore. Non si tratta di quattro minuti e trentatre
secondi di un silenzio qualunque.

Il mio amico aveva messo in atto un procedimento elaborato che in sostanza
consisteva nel riprodurre da un sintetizzatore software con il volume impostato
a zero un qualche altro brano musicale della lunghezza di quattro minuti e
trentatre secondi. Il risultato era un file della giusta lunghezza di soli zero
— che ha quindi compresso con un compressore MP3. Il file MP3 era identico bit
a bit a uno ottenuto comprimendo `/dev/zero`… ma questo file era (secondo lui)
una vera e propria registrazione di 4'33", mentre l'altro non lo sarebbe stato.
La differenza stava nel Colore dei bit. Lui sosteneva che i bit nella propria
copia di 433.mp3 avessero un Colore diverso da quelli nella copia di 433.mp3 che
potrei ottenere tramite `/dev/zero`, sebbene i due file contengano esattamente
gli stessi bit.

Ora, il paragrafo precedente è sostanzialmente privo di senso per un informatico
o per chi possegga un background matematico (come il mio amico; la sua era una
sorta di complicata presa in giro). I numeri sono numeri, no? Se io sommo 39 e 3
ottenendo 42, e tu fai lo stesso, non ha alcun senso affermare che il "mio" 42
sia diverso dal "tuo" 42. Dati due file MP3 identici bit a bit, non esiste un
modo sensato (per un informatico) di dire che uno è una registrazione dell'opera
di Cage e l'altro no. Non esisterebbe modo di sondare uno dei file e capire
quale fosse in origine, perché in realtà sono lo stesso file. Avere gli stessi
bit significa per definizione essere identici. I Bit non hanno Colore; gli
informatici, così come i computer, sono Daltonici. Questo non è un nostro errore
o una nostra mancanza: anzi, ci siamo impegnati per diventarlo. Il Daltonismo
degli informatici ci aiuta a capire che anche i computer sono Daltonici, e
dobbiamo esserne ben coscienti di ciò per svolgere il nostro lavoro.

Il problema è che gli esseri umani in generale non sono Daltonici. La legge non
è Daltonica. È importante non solo quali bit tu possegga, ma anche da dove
provengano. Sul sito internet dell'Osservatorio della Marina degli Stati Uniti
(USNO) troviamo un esempio di bit Colorati. Su quel sito danno informazioni
sull'ora dell'alba, del tramonto e cose del genere… ma le danno sotto
condizione che non sia lecito usare queste informazioni in tribunale. Se devi
sapere quando il sole è sorto o tramontato in una causa hai bisogno di un
perito — perché non ti bastano i bit dell'ora dell'alba. Hai bisogno che quei
bit siano Colorati del Colore che permetta loro di essere usati in tribunale, e
l'USNO questo non lo permette. Non è soltanto una questione di precisione —
sappiamo benissimo che i numeri dell'USNO vanno benissimo. È una questione
dell'origine di questi numeri. Ha perfettamente senso per un avvocato che la
provenienza di un informazione sia importante, in effetti forse più importante
dell'informazione stessa. La legge vede i Colori.

Supponiamo che pubblichiate un articolo che per caso contenga una frase identica
a una di questa articolo, ad esempio "La legge vede i Colori". Sono soltanto
quattro parole, tutte comuni, e la frase potrebbe essere benissimo prodotta
casualmente. Magari avevate idee simili alle mie e avete messo insieme le parole
in modo simile. Se è così, bene. Ma magari avete scritto il "vostro" articolo
copiando e incollando dal "mio" — in tal caso, le parole possiedono quel Colore
che obbliga ad attribuire le citazioni, a preoccuparsi dello stato di "lavoro
derivato" secondo la legge sul copyright e così via. Esattamente le stesse
parole — rappresentate su un computer con esattamente gli stessi bit — possono
avere Colore e conseguenze diverse. Usando le stesse parole senza metterle fra
virgolette puoi essere un autore o un plagiatore, a seconda di dove tu le abbia
prese, anche se sono le stesse parole. È importante da dove vengano quei bit.

Penso che ciò che i programmatori di [Monolith](monolith.sourceforge.com) stiano
sfidando sia il Colore, sebbene io tema che la loro comprensione del problema
sia superficiale sia sul lato informatico sia su quello legale. L'idea di
Monolith è di combinare matematicamente due file con l'operazione di or
esclusivo. Prendete un file su cui qualcuno vanta del copyright, fondetelo con
un file pubblico di dominio pubblico, e il risultato, spazzatura apparentemente
priva di informazione, è apparantemente non coperta da copyright sebbene
chiunque in seguito possa disfare l'operazione e produrre una copia del file
coperto da copyright da cui eravate partiti. Oh gioia! Gli avvocati ora ci
dovranno lasciare stare, ora che abbiamo dimostrato l'assurdità della
proprietà intellettuale!

Il punto debole di Monolith è che sta prendendo sottogamba il Colore, provando a
usare regole del mondo legale un istante e regole del mondo matematico l'istante
successivo, secondo come faccia più comodo. Quando all'inizio possedevate un
file coperto da copyright, quel file chiaramente ha il Colore "coperto da
copyright", e voi non potete averci a che fare, Cittadino. Quando è crittato
con Monolith, gli autori sostengono che il file risultante non possiede Colore —
come potrebbe avere il Colore del copyright? Sono solo bit casuali! Quando poi
è decrittato, non può possedere il Colore del copyright perché proviene da file
in pubblico dominio. Il problema è che qui ci sono due insiemi di regole in
conflitto. Secondo le regole dell'avvocato, il Colore non è una funzione
matematica dei bit, che può essere determinata andandoli a esaminare. _Quel che
conta è da dove questi bit provengano_. Il file crittato ha ancora il Colore del
copyright perché proviene da un file coperto da copyright. Non importa che
aspetto abbia, o il fatto che sia identico bit a bit a un file che potresti
ottenere da un generatore di numeri casuali. Quel che conta è che non l'hai
ottenuto così. Lo hai ottenuto da materiale coperto da copyright; quindi è
coperto da copyright. Il file generato casualmente, anche se è uguale bit a bit,
ha Colore diverso. Il Colore si conserva per i processi di crittazione e
decrittazione, e tu stai distribuendo del materiale coperto da copyright,
Mutante Traditore Comunista.

Per un informatico, d'altra parte, i bit sono bit e basta, ed è fondamentale che
due porzioni identiche di bit non possano essere distinte l'una dall'altra. Il
Colore non esiste. Ho visto informatici sostenere (in effetti, uno lo ha fatto
proprio oggi nella discussione che ha stimolato questo post) che la legge sul
copyright porta sempre a conclusioni prive di senso come: "Se io possiedo il
copyright su una cosa, e il copyright si conserva attraverso uno XOR, allora
io possiedo il copyright su tutto perché tutto può essere ottenuto dalla mia
cosa facendo XOR con il file opportuno". Questo suona profondo solo se siete un
informatico Daltonico; sarebbe noioso e privo di senso per un avvocato perché
agli avvocati è insegnato di credere e usare il Colore, ed è ovvio per un
avvocato che il Colore non si spande magicamente all'intero universo attraverso
file casuali ipotetici che un giorno potrebbero essere creati. _Avreste potuto
creare quel file casualmente, ma non lo avete fatto_. Magari potreste creare un
file identico alle opere complete di Shakespeare facendo XOR di due file
apparentemente contenenti spazzatura casuale. "Perché, così come posso io, può
chiunque"; ma questo non fa di me William Shakespare.

Questa idea del Colore è un problema di comunicazione fra chi di noi lavora nel
mondo dei computer, in cui il Colore non esiste, e chi di noi lavora nel mondo
della legge, dove il Colore esiste ed è importante. Gli avvocati porranno agli 
informatici domande su come scoprire il Colore di certi bit (ad esempio "Come
può l'Amico Computer evitare che i Mutanti Traditori Comunisti facciano copie
illegali, permettendo comunque ai fedeli Troubleshooter di usare i propri
dispositivi di copia?"), e gli informatici troveranno difficile rispondere in
modo che che gli avvocati capiscano — perché gran parte dell'informatica sta nel
capire che il Colore non esiste. Chi si preoccupa molto del Colore dei bit, e
spende risorse provando a rispondere a questa domanda, è un pericoloso idiota
se non un Mutante Traditore Comunista. Nella proprietà intellettuale il Colore
dei bit esiste ed è di importanza capitale. Un informatico che non dica di che
Colore sono i bit sta facendo ostruzionismo, e un informatico che nega
l'esistenza stessa del Colore (come ogni informatico zelante dovrebbe prima o
poi fare) è un pericoloso idiota e/o un Mutante Traditore Comunista.

Ci sono svariate tattiche che potremmo provare per evitare il problema. Gli
informatici che vogliano provare ad essere d'aiuto potrebbero dire: "Ok, tu,
l'avvocato, sei un pericoloso idiota, ma io devo lavorare con te oppure essere
buttato in prigione in quanto Mutante Traditore Comunista come è successo a
Dmitry Sklyarov, quindi proverò a risolvere il tuo problema. Tu dici che esiste
una qualche proprietà speciale di alcuni bit e che abbiamo bisogno di sapere
quali bit abbiano questa proprietà. Bene. Aggiungeremo un po' di tag a quei
file per dire di che Colore sono". Nel mondo del copyright questa è la soluzione
dei "DRM". È quello che fanno con i DVD (ristretti per regione), cassette VHS
(Macrovision), Adobe eBooks ("non puoi leggere questo file ad alta voce"), CD
(SCMS) e molti altri formati. Il problema è che se noi (come informatici)
fossimo intellettualmente onesti in proposito, dovremmo ammettere che non può
davvero funzionare.

I tag sono soltanto più bit. Puoi scrivere un tag che dice "questo è un tag
Arancione", ma sarebbe fatto di bit e quindi non potrebbe davvero avere un
Colore perché il Colore non esiste. Sarebbe soltanto un tag privo di Colore
che dice "questo è un tag Arancione". Sarebbe oggetto di tutte le conseguenze
del fatto che il Colore non esista — come il fatto che il tag possa essere
tolto più in là. Gli informatici lo sanno; dobbiamo esserlo, perché sapere
che il Colore non esiste è quello che ci rende informatici in primo luogo.

Quello che facciamo con i DRM è simulare il Colore in modo informatichese. Ma
gli avvocati sfruttano la possibilità di fare questo tipo di simulazione e
dicono: "Visto! Lo ammettete! Potete riconoscere il Colore dei bit, dopotutto!"
e poi ne ricavano tutte le altre regole che vogliono imporre (come "I
Troubleshooter di livello Rosso non possono camminare in corridoi Arancione")
abbiano senso nel mondo dell'informatica. Diranno "Puoi riconoscere il colore
dei bit, dopotutto!" invece di "Il colore esiste, dopotutto!" perché l'idea
che il colore non esista non sfiora neanche la loro immaginazione. Il "fatto"
che il Colore sia qualcosa di reale è così fondamentale per la legge che non
può essere messo in discussione. Ovviamente il Colore esiste. Noi avvocati
pensiamo al Colore così spesso che pensiamo di poterlo vedere. Come mai non
puoi? Magari i tuoi occhi hanno qualcosa che non va. Come informatici, dobbiamo
mettere in chiaro che il Colore simulato da tag privi di Colore che dicano
"questo è un tag Arancione" e simili, è comunque soltanto una simulazione. Le
proprietà che il colore dovrebbe avere non derivano dai tag, perché queste
proprietà sono Colore, i tag sono bit, e i bit non hanno Colore. Anche i bit
che parlano di Colore non hanno Colore. Il Colore non esiste.

Another thing computer scientists will try to do is to treat Colour as a function (in the strict mathematical sense of "function") of the bits - maybe an uncomputable function (in the strict mathematical sense of "uncomputable"), maybe intractable, but a function nevertheless.  We either do that because we mistakenly believe that Colour really is a function, or because we're a little more sophisticated, we know that it's not a function, but we think that we can fake it closely enough with a function to get the lawyers off our backs.  Either way, the idea is that we should be able to look at bits and somehow determine, from the bits themselves, what Colour they ought to be.

Treating Colour as a function is almost the same as attaching tags to the bits - the difference is that when the Colour is a function of the bits, we don't have to worry about the tags being detached; on the other hand, when the Colour is a function of the bits, we can never have more than one possible Colour for a given sequence of bits.  Monolith depends on exploiting this problem:  it assumes that one file can only ever have one Colour, asserts that the Colour of its output file is the "you may copy this" Colour because of the (correct) claim that fixing any other single unchangeable Colour would raise legal problems, and then follows the logic to a claim that it can produce what would otherwise be an illegal copy of the copyrighted input, without breaking copyright law.  One Colour per file was never one of the lawyers' rules of Colour; it's merely a consequence of "Colour is a function", and Colour being a function is just something we computer people decided to believe because functions make sense to our training and Colour doesn't.  Colour is not actually a function at all.

Trying to infer the Colour from the bits may seem like an okay thing to do as long as bits are tied to physical objects.  You can examine a paper document and determine whether it is an original or a photocopy.  You can probably examine something purporting to be a photograph and determine whether it is a photograph of a real scene, or something more complicated.  But even in the analog realm, determining Colour by examination is not always possible.  You can't determine by looking at a photograph of two people having sex whether they consented to the sex or not, let alone whether they consented to the making of the photograph.  That's a Colour distinction that is not a function of the bits that make up the photograph - and it's true even of analog photographs.

Other important questions which you may or may not be able to answer by examining a photograph are "Are those things actually humans, or some kind of simulation?" and "How old are they?" Those questions may have been difficult with analog; they become even more difficult with digital.  It is easy to imagine that someone could render by innocent means (drawing or ray tracing or whatever) an image bit-for-bit identical to an image that has the Colour (presumably Pink) of illegal child pornography.  In that case, depending on your view of such things, it may matter where the bits came from to the determination of whether they are Pink (illegal) or Green (legal).  Identical bits may have different Colour.

Child pornography is an interesting case because I find myself, and I think many people in the computing community will find themselves, on the opposite side of the Colourful/Colour-blind gap from where I would normally be.  In copyright I spend a lot of time explaining why Colour doesn't exist and it doesn't matter where the bits came from.  But when it comes to child pornography, I think maybe Colour should make a difference - if we're going to ban it at all, it should matter where it came from.  Whether any children were actually involved, who did or didn't give consent, in short:  what Colour the bits are.  The other side takes the opposite tack:  child pornography is dangerous by its very existence, and it doesn't matter where it came from.  They're claiming that whether some bits are child pornography or not, and if so, whether they're illegal or not, should be entirely determined by (strictly a function of) the bits themselves.  Legality, at least under the obscenity law, should not involve Colour distinctions.

Penso che gli informatici possano capire molto meglio il Colore di noi perché
in certe aree dell'informatica il Colore conta. Ho già parlato il problema
delle citazioni e del plagio — parole identiche possono o non possono essere 
lecite senza le virgolette in un articolo a seconda del loro Colore. Chi di noi
possiede una laurea è in grado di seguire queste regole perché le persone che
non lo fanno vengono espulse prima di conseguire il titolo. Ecco qua 
un'applicazione del Colore al mondo accademico.

Se aveste esperienza di metrologia — non "metereologia", intendo la scienza
delle misurazioni — TODO

If you've any exposure to metrology - not "meteorology", I mean the science of measurement - you'll be familiar with the idea of tracing the pedigree of standards.  Down in the chemistry lab they have a big jar of buffer solution with a label asserting that it not only has a pH of exactly 7.00, but that its pH is "traceable" to such-and-such primary standard, through a chain that probably terminates at the National Bureau of Standards in Boulder, Colorado, USA. That's Colour.  Not only do you know the pH of the buffer solution, but you know where it came from.  Someone other than the National Bureau of Standards might be able to produce a buffer solution that is just as good and just as accurately 7.00 pH. If you have a sample of good pH 7.00 buffer solution it might be indistinguishable from the real traceable standard solution; but it wouldn't really be the traceable solution unless it had the intangible Colour to make it authentic.

Parrebbe che le applicazioni del Colore all'informatica siano principalmente
nel campo della sicurezza. Supponete che il vostro computer sia stato
infettato da un qualche worm o virus, e che voi vogliate disinfettarlo. Cosa
fate? Caricate il sistema operativo dal dispositivo aperto soltanto in
scrittura che avete usato per installarlo. Certo, il vostro hard disk contiene
già una copia del sistema operativo, ma voi non potete usare quella copia — è
del Colore sbagliato. A questo punto cominciate a rimpiazzare file, magari
esaminandoli, cambiate dischi e li proteggete in scrittura; nel frattempo
state tenendo traccia del Colore di ogni parte del sistema e di ogni disco
finché non avete isolato i file sospetti e tutto il resto possiede il Colore
"non infetto da virus". È interessante osservare che gli sviluppari di
applicazioni web in Perl usano un sistema simile per tenere traccia di quali
bit sono "contaminati" dall'input degli utenti.

When we use Colour like that to protect ourselves against viruses or malicious input, we're using the Colour to conservatively approximate a difficult or impossible to compute function of the bits.  Either our operating system is infected, or it is not.  A given sequence of bits either is an infected file or isn't, and the same sequence of bits will always be either infected or not.  Disinfecting a file changes the bits.  Infected or not is a function, not a Colour.  The trouble is that because any of our files might be infected including the tools we would use to test for infection, we can't reliably compute the "is infected" function, so we use Colour to approximate "is infected" with something that we can compute and manage - namely "might be infected".  Note that "might be infected" is not a function; the same file can be "might be infected" or "not (might be infected)" depending on where it came from.  That is a Colour.

Ma il Colore "potrebbe essere infetto" è chiaramente una cosa fittizia che
creiamo per aiutarci ad approssimare una funzione difficile da approssimare.
È sempre facile argomentare che il Colore non esiste davvero. Ho lasciato alla
fine quello che penso essere il miglior esempio di Colore nell'informatica, e
penso che anche il matematico più purista debba accettare che, sebbene non
si tratti di una funzione e non possa essere rappresentata in bit, sia qualcosa
di reale di cui dobbiamo essere in grado di pensare e preoccuparci.

Random numbers have a Colour different from that of non-random numbers.  The question of how to determine whether numbers are random or not by looking at them is one of the recurring flame wars of sci.crypt.  You can't do it.  Here's a number:  2.  Was that a random number?  Well, maybe I got it by rolling a die (a random generator); or maybe I got it by counting my legs (probably not random).  If I give you a file of supposedly random bits, there's no way you can tell whether they are randomly generated or not.  The same file could have been generated by a quantum-mechanical random source, monkeys on typewriters, or by encrypting some well-known non-random file with some scheme that may or may not be generally known.

Potreste effettuare dei test statistici; ad esempio, se scopriste che nel file
è contenuta un'intera copia delle opere di Shakespeare, allora non avrebbe
l'aspetto che dovrebbero avere i numeri generati casualmente. Ma potrebbe
comunque esserlo. Il test ci dice se quel file possiede le proprietà statistiche
di un file generato casualmente, ma non garantisce che lo sia stato. Non è
neanche corretto dire che "la probabilità che questo testo sia stato generato
casualmente è molto bassa" perché non è vero — o lo è stato o non lo è stato,
non è questione di probabilità. Al più potreste dire "se chiedessimo a un
generatore casuale di produrre un file di queste dimensioni, la probabilità
di generare questo file sarebbe molto bassa", che suona la stessa cosa, ma non
lo è.

Fate attenzione ai termini che ho usato — ho detto numeri "generati
casualmente". I crittografi zelanti evitano di dire "numeri casuali".
Correggono costantemente e fastidiosamente con "numeri generati casualmente",
perché non sono i numeri a essere o meno casuali, ma la loro sorgente. Se vi
stessero dando numeri da una sorgente casuale e voi li metteste alla prova per
vedere se sono davvero "casuali", buttando via quelli che non sembrano esserlo,
allora finireste per diminuire l'entropia di Shannon della sorgente, violando
i vincoli del cifrario di Vernam se la vostra applicazione si basa su di esso,
e in generale diminuendo la sicurezza. Nella precedente frase vi ho tirato
addosso un po' di termini matematici e non ho in mente di spiegarli qui, ma i
crittografi capiscono che non sono i numeri a contare quando parliamo di
casualità. Quel che conta è da dove vengano questi numeri — cioè, esattamente,
il loro Colore.

Perciò se pensiamo di capire la crittografia, dovremmo essere in grado di
capire che il Colore è qualcosa di reale sebbene i bit non posseggano Colore.
Penso sia ora che gli informatici prendano sul serio il Colore — se non altro
per spiegare meglio agli avvocati perché debbano abbandonare il proprio sogno
di pretendere l'esistenza del Colore all'interno dell'Amico Computer, in cui il
colore non c'è e non può esistere. Magari allora smetteranno di provare a
spararci in quanto Mutanti Traditori Comunisti.

[...]

["What Colour are your bits?"]: http://ansuz.sooke.bc.ca/entry/23
[Paranoia]: http://www.mongoosepublishing.com/rpgs/paranoia.html
[Articolo di LawMeme]: http://research.yale.edu/lawmeme/modules.php?name=News&file=article&sid=1487
